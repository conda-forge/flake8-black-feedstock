{% set name = "flake8-black" %}
{% set version = "0.3.6" %}
{% set sha256 = "0dfbca3274777792a5bcb2af887a4cad72c72d0e86c94e08e3a3de151bb41c34" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  noarch: python
  number: 1
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - python {{ python_min }}
    - pip
    - setuptools
  run:
    - python >={{ python_min }}
    - flake8 >=3
    - black >=22.1.0
    # TODO - tomli not used with Python 3.11 onwards
    - tomli

test:
  requires:
    - python {{ python_min }}
  commands:
    - 'flake8 --version | grep black:'

about:
  home: https://github.com/peterjc/flake8-black
  license: MIT
  license_family: MIT
  license_file: LICENSE.rst
  summary: Extension for flake8 for validating Python code style using black
  dev_url: https://github.com/peterjc/flake8-black
  description: |
    Black, "The Uncompromising Code Formatter", is normally run to edit your
    Python code in place to match their coding style, a strict subset of the
    PEP 8 style guide. The point of this plugin is to be able to run
    black --check ... from within the flake8 plugin ecosystem. You might use
    this via a git pre-commit hook, or as part of your continuous integration
    testing.

extra:
  recipe-maintainers:
    - peterjc
